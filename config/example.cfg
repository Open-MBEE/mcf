{
  // ************************* Authorization Parameters ************************
  //
  // The following parameters are used in order to configure the authorization
  // and security of the MBEE application.
  "auth": {

    // REQUIRED
    // The authentication strategy used for authentication. This must be a valid
    // javascript file and must be located in the app/auth/ directory. The strategy
    // is required to implement the handleBasicAuth, handleTokenAuth, and doLogin.
    // functions.
    "strategy": "local-ldap-strategy",

    // REQUIRED if using an ldap-based strategy
    // For strategies that require authentication via LDAP-AD.
    "ldap": {

      // REQUIRED
      // The URL which is hosting the lDAP service.
      "url": "ldap://your-ldap-server.com",

      // REQUIRED
      // The port which the LDAP server is listening on.
      "port": "389",

      // OPTIONAL
      // The file location of any Certificate files which are required to authenticate
      // with the LDAP server. Single and multiple files should be listed as an array.
      "ca": [
        "path/to/your/cert1.pem"
      ],

      // REQUIRED
      // The user credentials required for authentication.
      "bind_dn": "your-bind-dn",

      // REQUIRED
      // The password credentials required for authentication.
      "bind_dn_pass": "your-bind-password",

      // REQUIRED
      // The base of the LDAP directory.
      "base": "your-ldap-base",

      // REQUIRED
      // The filter used for the LDAP query.
      // NOTE: Any characters which require a back slash as an escape character
      // must be prefaced with two backslashes.
      "filter": "your-ldap-filter",

      // REQUIRED
      // The attribute for username, first name, last name, and email within the LDAP server.
      "attributes": {
        "username": "accountUsername",
        "firstName": "givenFirstName",
        "preferredName": "preferredFirstName",
        "lastName": "lastName",
        "email": "emailAddress"
      }
    },


    // ************************* Token & Session Parameters ************************
    //
    // REQUIRED
    // The following parameters are used in order to configure the use of tokens.
    // "expires" is the time length for expiration of a token and "units" is the
    // unit of time for "expires" (valid options are MILLISECONDS, SECONDS,
    // MINUTES, HOURS, DAYS).
    "token": {
      "expires": 10,
      "units": "MINUTES"
    },
    // REQUIRED
    // The following parameters are used in order to configure the use of sessions.
    // "expires" is the time length for expiration of a session and "units" is the
    // unit of time for "expires" (valid options are MILLISECONDS, SECONDS,
    // MINUTES, HOURS, DAYS).
    // redis_host and redis_port are required
    // cookie is required
    "session": {
      // Session Expiration
      "expires": 30,
      // Session Expiration format
      "units": "MINUTES"
      // Redis Host
      "redis_host": "localhost",
      // Redis Port
      "redis_port": "6379",
      // Cookie info
      "cookie": {
        // Secure (only for HTTPS)
        "secure": false,
        "httpOnly": true,
        "sameSite": "lax"
      }
    },

    // OPTIONAL
    // This field specifies how many old passwords to store and enables logic to
    // prevent users from reusing any stored password.
    "oldPasswords": 12
  },

  // ************************* Database Parameters *************************
  //
  // REQUIRED
  // The following parameters are used in order to configure the database used by MBEE.
  // MBEE currently only supports MongoDB as it's database.
  "db": {
    // REQUIRED
    // The database strategy being used. mongoose-mongodb-strategy is the
    // preferred strategy.
    "strategy": "mongoose-mongodb-strategy",

    // REQUIRED
    // The URL used to connect you your database instance.
    "url": "your-db-url.com",

    // REQUIRED
    // The port which your database is listening on.
    "port": "27017",

    // REQUIRED
    // The name of the database.
    "name": "your-db-name",

    // REQUIRED if using authentication
    // The username and password used to authenticate against your database.
    // These may be left as empty strings or removed if no authentication is required.
    "username": "your-db-user",
    "password": "your-db-pass",

    // OPTIONAL, defaults to false if not provided
    // A boolean indicating whether or not ssl is used for the database authentication.
    "ssl": true,

    // REQUIRED if ssl is true
    // The location of the ssl certificate if ssl is set to true.
    "ca": "your/ssl/cert.pem"
  },


  // ************************* Docker Parameters *************************
  //
  // REQUIRED if using MBEE docker build script
  // The following parameters are used in order to configure the docker build used by MBEE.
  // These setting will only be used for the 'node mbee docker' commands.
  "docker": {
    // The name of the image the container will be deployed with.
    "image": {
      "name": "your-image-name"
    },
    // The name of the container that docker will build.
    "container": {
      "name": "your-container-name"
    },
    // The port information if the database will be running in the docker
    // container.
    "db": {
      // A boolean to indicate if the database will be running in the docker
      // container.
      "enabled": true,
      // The port which gets mapped to the external db port, and is exposed by the container.
      "port": 1234
    },
    // The port information which the container will listen on for incoming http requests.
    "http": {
      // A boolean to indicate if server will listen for http requests.
      "enabled": true,
      // The port which will listen for http requests if they are enabled.
      "port": 6233
    },
    // The port information which the container will listen on for incoming https requests.
    "https": {
      // A boolean to indicate if server will listen for https requests.
      "enabled": true,
      // The port which will listen for https requests if they are enabled.
      "port": 6234
    },
    // The location of the docker files used to build the configuration file.
    // Relative to MBEE root directory.
    "Dockerfile": "./config/Dockerfile"
  },

  // ************************* Log Parameters *************************
  //
  // REQUIRED
  // The following parameters are used in order to configure the log output used by
  // the running instance of MBEE.
  "log": {
    // The level of log info which will be displayed on the console and written to the log file.
    // Options: critical, error, warn, info, verbose, debug
    "level": "error",
    // The file location relative to the MBEE root directory which will contain the
    // above log level data.
    "file": "mbee.log",
    // The file location relative to the main MBEE root directory which will
    // contain error level log data.
    "error_file": "mbee-error.log",
    // The file location relative to the main MBEE root directory which will
    // contain debug level log data.
    "debug_file": "mbee-debug.log",
    // A boolean which indicates whether or not to color the output of the log
    // data to both the console and the log files.
    "colorize": true
  },

  // ************************* Server Parameters *************************
  //
  // REQUIRED
  // The following parameters are used in order to configure the server which MBEE
  // is hosted on.
  "server": {
    // REQUIRED
    // Default admin user credentials
    "defaultAdminUsername": "admin",
    "defaultAdminPassword": "Admin12345!",
    // REQUIRED
    // Default shared organization
    "defaultOrganizationId" : "default",
    "defaultOrganizationName" : "Default",
    // REQUIRED
    // Allow any user to create orgaizations
    "enableSandboxes" : true,

    // REQUIRED
    // The http information which directory relates to node.
    // NOTE: If hosting directly from node, this is the port which MBEE will
    // listen to. If application is instead being hosted as a docker container,
    // this port will be routed to the port for the docker container which
    // is configured above.
    "http": {
      // REQUIRED
      // Boolean indicating if http will be enabled for the application.
      "enabled": true,
      // REQUIRED if enabled is true
      // The port to listen for http requests on.
      "port": 6233,
      // OPTIONAL, defaults to false
      // An option to redirect all HTTP requests to HTTPS
      "redirectToHTTPS": true
    },

    // REQUIRED
    // The https information which directory relates to node.
    // NOTE: If hosting directly from node, this is the port which MBEE will
    // listen to. If application is instead being hosted as a docker container,
    // this port will be routed to the port for the docker container which
    // is configured above.
    "https": {
      // REQUIRED
      // Boolean indicating if http will be enabled for the application.
      "enabled": true,
      // REQUIRED if enabled is true
      // The port to listen for https requests on.
      "port": 6234,
      // REQUIRED if enabled is true
      // If https is enabled, the name of the ssl cert which will be used for
      // hosting the secure connection.
      "sslCert": "path/to/your/ssl/cert.crt",
      "sslKey": "path/to/your/ssl/key.key"
    },

    // OPTIONAL
    // The timeout of any requests to the Node.js server in milliseconds. By default,
    // Node.js timeouts are 120,000 milliseconds, but this may not be substantial for request
    // sending or receiving large amounts of data.
    "requestTimeout": 120000,

    // OPTIONAL
    // The amount of data the node can accept in a request to the server.
    // For large requests, a large size may be necessary. If a PayloadTooLargeError
    // is ever received, it means the request was too large and the size may
    // need to be increased.
    "requestSize": "50mb",

    // REQUIRED
    // The API routes can be enabled or disabled based on the desired configuration.
    "api": {
      // REQUIRED
      // A boolean to indicate whether or not API routes are enabled.
      "enabled": true,
      // REQUIRED if enabled is true
      // If enabled, the API will return JSON with the following indent size in spaces.
      "json": {
        "indent": 4
      },
      // REQUIRED if enabled is true
      // A boolean to indicate whether or not specific User API routes are enabled.
      "userAPI": {
        "get": true,
        "post": true,
        "put": true,
        "patch": true,
        "patchPassword": true,
        "delete": true
      }
    },

    // OPTIONAL
    // By default, project ids are made unique by concatenating them with their org ids.
    // This option enforces that un-concatenated project ids will also be unique. This
    // option was created to address backwards-compatibility with VE/MDK. These
    // products expect to be able to query projects without org ids.
    "uniqueProjects": false,

    // REQUIRED
    // The following parameters are used to import any plugins that are used in
    // your MBEE application. IMPORTANT: Plugins run natively in the application
    // and have direct access to the core MBEE framework. As a result, plugins
    // have the same security permissions as the MBEE application itself. This
    // design allows for efficient performance among many data heavy processing
    // plugins. However it poses a security risk for any plugin which has not
    // been properly vetted. The server admin MUST make sure the plugin they are
    // using does not pose any security risk the the MBEE application before
    // importing them.
    "plugins": {
      // REQUIRED
      // A boolean to indicate whether or not plugins are enabled.
      "enabled": false,
      // REQUIRED
      // Each plugin to be imported and mounted into the MBEE application is
      // listed here as an object.
      // Parameters: name, source, deployKey, version, title
      "plugins": {
        "plugin-example-name": {
            // REQUIRED
            "title": "Friendly Plugin Name",
            // REQUIRED
            "source": "https://github.com/path-to-your-plugin.git",
            // OPTIONAL
            "deployKey": "path/to/your/key.key",
            // OPTIONAL
            "version": 1.0
        },
        "plugin-example-2": {
            "name": "plugin-example-2",
            "source": "etc",
            "title": "etc"
        }
      }
    },

    // REQUIRED
    // The UI routes can be enabled or disabled based on the desired configuration.
    "ui": {
      // REQUIRED
      // A boolean to indicate whether or not the UI is enabled.
      "enabled": true,
      // Defining if the UI is in production or development mode.
      "mode": "production",
      // Defining the base path for the UI
      "basePath": "/",
      // The UI can display a login modal warning statement. The following parameters
      // are used to set up the modal message.
      // REQUIRED if enabled is true
      "loginModal": {
        // A boolean to indicate whether or not the modal message is enabled.
        "on": false,
        // The message for the login modal.
        "message": "Your warning modal message here.",
        // Configure for how long the message should stay hidden between logins
        // (acccepts time in *whole* h/m/s ie "2h" or "180m" defaults to minutes).
        "hideFor": "480m",
      },
      // The UI can display a banner statement. The following parameters are
      // used to set up the banner.
      // REQUIRED if enabled is true
      "banner": {
        // A boolean to indicate whether or not the banner is enabled.
        "on": false,
        // The message for the banner.
        "message": "Your Banner",
        // The color of the banner in Hex or RGB.
        "color": "#FFF",
        // The background of the banner in Hex or RGB.
        "background": "rgb(0, 52, 120)",
        // A boolean to indicate whether the banner is bold or not.
        "bold": true,
        // The CSS definition of the border to be added to the banner.
        "border": "1px solid #656565"
      }
    },
    // REQUIRED
    // The server secret used for encrypting and decrypting server sessions and
    // tokens. NOTE: If 'RANDOM', the secret will be auto-generated.
    "secret": "RANDOM"
  },

  // ************************* Artifact Storage *************************
  // Defines the artifact specific configurations
  "artifact": {
    // "local-strategy" for local storage
    "strategy": "local-strategy"
  },
  // ************************* Test Parameters *************************
  //
  // REQUIRED
  // The following parameters are used in order to configure the MBEE application during
  // testing. This applies only to the application when 'node mbee test' is run.
  "test": {
    // The certificate used in the API tests, relative to root MBEE directory.
    "ca": "path/to/your/cert.pem",
    // The URL used for API tests. NOTE: The server must be running.
    "url": "http://localhost:6223"
  },
  // OPTIONAL
  // Custom regex validators can be specified to overwrite default validation
  // behaviors. Empty, missing, or otherwise false values are ignored.
  "validators": {
    "id": "([a-z0-9]{8}(-[a-z0-9]{4}){3}-[a-z0-9]{12})",
    "id_length": "",
    "org_id": "",
    "org_id_length": "",
    "project_id": "",
    "project_id_length": "",
    "branch_id": "",
    "branch_id_length": "",
    "element_id": "",
    "element_id_length": "",
    "artifact_id": "",
    "artifact_id_length": "",
    "user_username": "",
    "user_username_length": "",
    "user_email": "",
    "user_fname": "",
    "user_lname": "",
    "user_provider": ["local", "ldap"],
    "url_next": ""
  }
}
